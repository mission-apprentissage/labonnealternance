name: Release version
on:
  push:
    branches: [main, next]

jobs:
  tests:
    uses: "./.github/workflows/ci.yml"
    secrets:
      CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}

  release:
    concurrency:
      group: "release-${{ github.workflow }}-${{ github.ref }}"
    permissions: write-all
    outputs:
      VERSION: ${{ steps.get-version.outputs.VERSION }}
      PREV_VERSION: ${{ steps.get-version.outputs.PREV_VERSION }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout project
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          persist-credentials: true

      - uses: actions/setup-node@v3
        with:
          node-version: 20

      - uses: actions/cache@v3
        with:
          path: |
            **/node_modules
            .yarn/install-state.gz
            .yarn/cache
            ~/.cache
          key: yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: yarn-

      - name: Install dependencies
        run: yarn install

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          platforms: linux/amd64
          install: true

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Expose GitHub Runtime
        uses: crazy-max/ghaction-github-runtime@v2

      - name: bump and release
        run: yarn release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
          GITHUB_REF_NAME: ${{ env.GITHUB_REF_NAME }}

      - name: Retrieve version
        id: get-version
        run: |
          VERSION=$(git describe --tags --abbrev=0 | cut -c2-)
          PREV_VERSION=$(git describe --tags --abbrev=0 v"${VERSION}"^ | cut -c2-)
          echo "VERSION=${VERSION}" >> "$GITHUB_OUTPUT"
          echo "PREV_VERSION=${PREV_VERSION}" >> "$GITHUB_OUTPUT"

  security-ui:
    concurrency:
      group: "security-ui-${{ github.workflow }}-${{ github.ref }}"
    needs: ["release"]
    name: Check for CVEs
    runs-on: ubuntu-latest
    steps:
      - name: UI Docker Scan Secrets
        uses: GitGuardian/ggshield-action@v1.16.0
        with:
          args: '"docker" "ghcr.io/mission-apprentissage/mna_lba_ui:${{ needs.release.outputs.VERSION }}-production"'
        env:
          GITHUB_PUSH_BEFORE_SHA: ${{ github.event.before }}
          GITHUB_DEFAULT_BRANCH: ${{ github.event.repository.default_branch }}
          GITGUARDIAN_API_KEY: ${{ secrets.GITGUARDIAN_API_KEY }}

      - name: UI Docker Scout
        uses: docker/scout-action@v1
        with:
          command: quickview,cves,recommendations
          image: ghcr.io/mission-apprentissage/mna_lba_ui:${{ needs.release.outputs.VERSION }}-production
          to: ghcr.io/mission-apprentissage/mna_lba_ui:${{ needs.release.outputs.PREV_VERSION }}-production
          sarif-file: sarif.output.json

      - name: UI Docker Upload SARIF result
        id: upload-sarif
        uses: github/codeql-action/upload-sarif@v2
        with:
          sarif_file: sarif.output.json

  security-server:
    concurrency:
      group: "security-server-${{ github.workflow }}-${{ github.ref }}"
    needs: ["release"]
    runs-on: ubuntu-latest
    steps:
      - name: Server Docker Scan Secrets
        uses: GitGuardian/ggshield-action@v1.16.0
        with:
          args: '"docker" "ghcr.io/mission-apprentissage/mna_lba_server:${{ needs.release.outputs.VERSION }}"'
        env:
          GITHUB_PUSH_BEFORE_SHA: ${{ github.event.before }}
          GITHUB_DEFAULT_BRANCH: ${{ github.event.repository.default_branch }}
          GITGUARDIAN_API_KEY: ${{ secrets.GITGUARDIAN_API_KEY }}

      - name: Server Docker Scout
        uses: docker/scout-action@v1
        with:
          command: quickview,cves,recommendations
          image: ghcr.io/mission-apprentissage/mna_lba_server:${{ needs.release.outputs.VERSION }}
          to: ghcr.io/mission-apprentissage/mna_lba_server:${{ needs.release.outputs.PREV_VERSION }}
          sarif-file: sarif.output.json

      - name: Server Docker Upload SARIF result
        uses: github/codeql-action/upload-sarif@v2
        with:
          sarif_file: sarif.output.json

  deploy:
    concurrency:
      group: "deploy-${{ github.workflow }}-${{ github.ref }}"
    needs: ["release"]
    name: Deploy ${{ needs.release.outputs.VERSION }} on recette
    uses: "./.github/workflows/_deploy.yml"
    with:
      environment: recette
      app_version: ${{ needs.release.outputs.VERSION }}
    secrets:
      DEPLOY_SSH_PRIVATE_KEY: ${{ secrets.DEPLOY_SSH_PRIVATE_KEY }}
      DEPLOY_PASS: ${{ secrets.DEPLOY_PASS }}
      SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
      VAULT_PWD: ${{ secrets.VAULT_PWD }}

  cypress:
    needs: ["deploy"]
    uses: "./.github/workflows/cypress.yml"
    with:
      cypress_host: "https://labonnealternance-recette.apprentissage.beta.gouv.fr"
    secrets:
      CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
      SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
