name: Release version
on:
  push:
    branches: [main, next]

jobs:
  tests:
    uses: "./.github/workflows/ci.yml"
    secrets:
      CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}

  release:
    concurrency:
      group: "release-${{ github.workflow }}-${{ github.ref }}"
    permissions: write-all
    outputs:
      VERSION: ${{ steps.get-version.outputs.VERSION }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout project
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          persist-credentials: true

      - uses: actions/setup-node@v3
        with:
          node-version: 20

      - uses: actions/cache@v3
        with:
          path: |
            **/node_modules
            .yarn/install-state.gz
            .yarn/cache
          key: yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: yarn-

      - name: Install dependencies
        run: yarn install

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
        with:
          platforms: linux/amd64
          install: true

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Expose GitHub Runtime
        uses: crazy-max/ghaction-github-runtime@v2

      - name: bump and release
        run: yarn release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
          GITHUB_REF_NAME: ${{ env.GITHUB_REF_NAME }}

      - name: Retrieve version
        id: get-version
        run: echo "VERSION=$(git describe --tags --abbrev=0 | cut -c2-)" >> "$GITHUB_OUTPUT"

  deploy:
    concurrency:
      group: "deploy-${{ github.workflow }}-${{ github.ref }}"
    needs: ["release"]
    name: Deploy ${{ needs.release.outputs.VERSION }} on recette
    uses: "./.github/workflows/_deploy.yml"
    with:
      environment: recette
      app_version: ${{ needs.release.outputs.VERSION }}
    secrets:
      DEPLOY_SSH_PRIVATE_KEY: ${{ secrets.DEPLOY_SSH_PRIVATE_KEY }}
      DEPLOY_PASS: ${{ secrets.DEPLOY_PASS }}
      SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
      VAULT_PWD: ${{ secrets.VAULT_PWD }}

  cypress:
    concurrency:
      group: "cypress-${{ github.workflow }}-${{ github.ref }}"
    needs: ["deploy"]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout project
        uses: actions/checkout@v4

      - uses: actions/setup-node@v3
        with:
          node-version: 20

      - uses: actions/cache@v3
        with:
          path: |
            **/node_modules
            .yarn/install-state.gz
            .yarn/cache
          key: yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: yarn-

      - name: Install dependencies
        run: yarn install

      - name: Run cypress e2e tests
        run: yarn e2e:recette

      - name: Notify failure on Slack
        uses: ravsamhq/notify-slack-action@v2
        if: always()
        with:
          status: ${{ job.status }}
          notification_title: "Les tests e2e ne sont pas pass√©s : ${{ inputs.app_version }} en ${{ inputs.environment }}"
          message_format: "{emoji} *[${{ inputs.environment }}]* *{workflow}* {status_message} in <{repo_url}|{branch}> on <{commit_url}|{commit_sha}>. You can get error logs using `.bin/mna-lba deploy:log:decrypt ${{ github.run_id }}`"
          notify_when: "failure"
          mention_groups: "!channel"
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK }}
